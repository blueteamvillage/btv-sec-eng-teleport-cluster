---
name: default-bare

on:
  push:
  pull_request:
  workflow_dispatch:

permissions: {}

jobs:
  build:
    permissions:
      contents: read
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        os: [ubuntu-22.04, ubuntu-20.04]
    env:
      ANSIBLE_CALLBACKS_ENABLED: profile_tasks
      ANSIBLE_EXTRA_VARS: "-e teleport_storage_backend=sqlite -e teleport_auth_type=local"
      ANSIBLE_ROLE: blueteamvillage.btv-sec-eng-teleport-cluster
      ANSIBLE_ROLE_PATH: btv-sec-eng-teleport-cluster/ansible/roles/teleport-cluster
      ANSIBLE_PLAYBOOK: test/integration/default/default.yml

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip3 install ansible-lint flake8 yamllint
          which ansible
          pip3 install ansible
          pip3 show ansible
          ansible --version
          cd $GITHUB_WORKSPACE/$ANSIBLE_ROLE_PATH
          ln -s $GITHUB_WORKSPACE/$ANSIBLE_ROLE_PATH $GITHUB_WORKSPACE/$ANSIBLE_ROLE_PATH/../$ANSIBLE_ROLE
          { echo '[defaults]'; echo 'callbacks_enabled = profile_tasks, timer'; echo 'roles_path = ../'; echo 'ansible_python_interpreter: /usr/bin/python3'; } >> ansible.cfg
      - name: Environment
        run: |
          set -x
          pwd
          env
          find -ls
      - name: run test
        run: |
          cd $GITHUB_WORKSPACE/$ANSIBLE_ROLE_PATH && ansible-playbook -i localhost, --connection=local --become -vvv $ANSIBLE_PLAYBOOK ${ANSIBLE_EXTRA_VARS}
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
      - name: idempotency run
        run: |
          cd $GITHUB_WORKSPACE/$ANSIBLE_ROLE_PATH && ansible-playbook -i localhost, --connection=local --become -vvv $ANSIBLE_PLAYBOOK ${ANSIBLE_EXTRA_VARS} | tee /tmp/idempotency.log | grep -q 'changed=0.*failed=0'  && (echo 'Idempotence test: pass' && exit 0)  || (echo 'Idempotence test: fail' && cat /tmp/idempotency.log && exit 0)
      - name: On failure
        run: |
          systemctl -l --no-pager status
          systemctl -l --no-pager --failed
          ls -l /usr/bin/ | egrep '(python|pip|ansible)'
          pip freeze
          pip3 freeze
          ip addr
          cat /etc/resolv.conf
          host www.google.com
          ping -c 1 www.google.com || true
          ping -c 1 8.8.8.8 || true
        if: ${{ failure() }}
        continue-on-error: true
      - name: After script - ansible setup
        run: |
          ansible -i inventory --connection=local -m setup localhost
        if: ${{ always() }}
        continue-on-error: true
      - name: After script - systemd
        run: |
          systemctl -l --no-pager status teleport || true
          systemd-analyze --no-pager security || true
        if: ${{ always() }}
        continue-on-error: true
      - name: After script - network
        run: |
          sudo ss -tunap
        if: ${{ always() }}
        continue-on-error: true
      - name: After script - etc
        run: |
          set -x
          sudo cat /etc/teleport.yaml
        if: ${{ always() }}
        continue-on-error: true
      - name: After script - tctl
        run: |
          set -x
          sudo tctl status
          sudo tctl users ls
          sudo tctl nodes ls
          sudo tctl inventory ls
        if: ${{ always() }}
        continue-on-error: true
      - name: After script - logs
        run: |
          set -x
          sudo tail -100 /var/lib/teleport/log/events.log
        if: ${{ always() }}
        continue-on-error: true
      - name: After script - journalctl
        run: |
          journalctl -xeu teleport -l --no-pager
        if: ${{ always() }}
        continue-on-error: true